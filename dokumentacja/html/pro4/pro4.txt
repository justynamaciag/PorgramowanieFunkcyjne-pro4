-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Initial project template from stack
--   
--   Please see README.md
@package pro4
@version 0.1.0.0

module ParserMonads

-- | Using item,char,upper,lower
parseeee :: [String] -> IO ()

-- | Parser with empty value
nothing :: Parser a

-- | Funtion which gives first char from input
giveFirst :: Parser Char

-- | Returns chars packed in Parser, which fulfill the condition gave as
--   true/false function
useFunction :: (Char -> Bool) -> Parser Char

-- | Funcion which is using useFunction in order to check identity
char :: Char -> Parser Char

-- | Function which is using <a>useFunction</a> in order to check if is it
--   a upper letter
upper :: Parser Char

-- | Function which is using <a>useFunction</a> in order to check if is it
--   a lower letter
lower :: Parser Char

-- | Function which returns value packed in Parser
result :: a -> Parser a

-- | Using <a>useFunction</a> in order to check if char is a vowel
isVowel :: Parser Char
instance GHC.Base.Monad ParserMonads.Parser
instance GHC.Base.Functor ParserMonads.Parser
instance GHC.Base.Applicative ParserMonads.Parser

module Lib

-- | Makes statistics about string from input File, using parseeee
statistics :: IO ()

-- | Count amount of specified char in input string
countLetters :: String -> Char -> Int

-- | Count amount od words in input string
countWords :: String -> Int

-- | Count amount of lines in input string
countLines :: String -> Int

-- | Count amount of words longer than 80 chars in string
longerThan80 :: String -> Int
